version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: gym_tracker-dev
    init: true
    depends_on:
      db:
        condition: service_healthy
      solid_queue_worker:
        condition: service_started
    tty: true
    stdin_open: true
    command: 'bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b 0.0.0.0"'
    volumes: &app_volumes
      - .:/rails
      - bundle_data:/usr/local/bundle
    ports:
      - "3000:3000"
    environment: &app_environment
      RAILS_ENV: development
      DATABASE_URL: postgres://postgres:password@db:5432/gym_trackr_development
      ECDSA_KEY: ${ECDSA_KEY}
    networks:
      - gym_trackr_network

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: gym_trackr_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - gym_trackr_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5432:5432"

  solid_queue_worker:
    build:
      context: .
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    image: gym_tracker-dev
    command: bundle exec rake solid_queue:work
    depends_on:
      - db
    networks:
      - gym_trackr_network
    volumes: *app_volumes
    environment: *app_environment

  app-test:
    build:
      context: .
      dockerfile: Dockerfile
    image: gym_tracker-test
    init: true
    depends_on:
      db-test:
        condition: service_healthy
    tty: true
    stdin_open: true
    command: bundle exec rails s -p 3001 -b '0.0.0.0'
    volumes:
      - .:/rails
      - bundle_data_test:/usr/local/bundle
    ports:
      - "3001:3000"
    environment:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:password@db-test:5432/gym_trackr_test
      ECDSA_KEY: ${ECDSA_KEY}
    networks:
      - gym_trackr_network

  db-test:
    image: postgres:latest
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: gym_trackr_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5433:5432"
    networks:
      - gym_trackr_network

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    image: gym_tracker-frontend
    tty: true
    stdin_open: true
    networks:
      - gym_trackr_network
    ports:
      - "4000:4000"
    volumes:
      - ./frontend:/app

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: gym@trackr.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - gym_trackr_network

networks:
  gym_trackr_network:
    driver: bridge

volumes:
  postgres_data:
  postgres_data_test:
  frontend:
  pgadmin_data:
  bundle_data:
  bundle_data_test:
